bool play()
{
  char player_turn[100];
  srand(time(0));
  int r;

  printf("Please make your selection (rock/paper/scissors):\n");
  r = tgetinput(player_turn, 100);
  // Timeout on user input
  if (r == -3)
  {
    printf("Goodbye!\n");
    exit(0);
  }

  int computer_turn = rand() % 3;
  printf("You played: %s\n", player_turn);
  printf("The computer played: %s\n", hands[computer_turn]);

  if (strstr(player_turn, loses[computer_turn]))
  {
    puts("You win! Play again?");
    return true;
  }
  else
  {
    puts("Seems like you didn't win this time. Play again?");
    return false;
  }
}

As in the above function it uses 'strstr' function to check for win.
This line is vulnerable because 'strstr' locates the substring (loses[computer_turn] in this case)
string player_turn and if it found then returns true.

In order to bypass this i simply inputs 'rockpaperscissor' so that my input contains all the possible 
substrings for computer_turn which results in our win.