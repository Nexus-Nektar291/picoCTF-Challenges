from Crypto.Util.number import *
from primefac import primefac

n = 0xA1355E27E1419C3F129F1DB20915BF2A2D8DB159B67B55858CCB2FBE4C6F4F8245411928326496B416F389DC88F6F89F1E7DC2F184A4FB5EFD40D53C4F578BD4643AEA45971C21BDE2DDFC6582C2955466CB8F5F2341D11AD3BDCB678EFEADD043D203105545D104B1C6BDE632FE72E89E37AF6C69B8CA3C0D7F1367E3F9967F719E816FF603544530999EDA08D28B6390FC9E3C8E0EB7432E9506BF5E638C4F548DD8C6C6C0791915F2E31B4F4114C89036650EBF541FEC907017D17062114F6D2008AA641166A27734C936E7CB0F4C9DF4CA5C7B57019901CBB4F3D3BBC78BEFBFB770CA8CBF0F3D9B752D55B81F57379E9A13BD33CF3EE17F131C16DB8B21
c = 0x73D31BA14F88D1343A774E5D4315E1733AF382318D7BF99116E5E42F0B11DC9561DFA7EAFCA3E061504538396FD5E463247596E8524DF1C51600644D9EA7E607D5BE8F79EF237907616D2AB958DEBC6BEF12BD1C959ED3E4C2B0D7AFF8EA74711D49FC6E8D438DE536D6DD6EB396587E015289717E2C6EA9951822F46AAE4A8AA4FC2902CEEDDEFD45E67FE6D15A6B182BAFE8A254323200C728720BFD2D727CC779172F0848616ED37D467179A6912E8BBEB12524C7AC5CDA79EEE31B96CC7E36D9D69EF673F3016D0E6F0444B4F9DE3D05F9D483EE6C1AF479A0FFB96E9EFAB8098E12C7160FE3E4288364BE80633A637353979C3D62376ABFC99C635B703C
e = 0x10001

# factors = list(primefac(n))
# print(factors)

p = 154714566007807784658217453973430067124002427483243197849791456415176834246233278559337287163780143729239757891659989122025191209127201898935320797851763250468612618658207399696173578206890458794774190054174795187906918498063579076533339922893829854809748220803577061068137039229503960574560413271008097993583
q = 131536960389108324746509593592647252752076232711590732350513680264954389598896958770007320269610854946395975800261319643437878745584431841271008610282045904095237260203730192533418362654247249796895943916601029017612233988525763875726554094863676279834825160377986715062041818088166778791274574206865596600943

assert p * q == n

phi = (p - 1) * (q - 1)
d = pow(e, -1, phi)
pt = pow(c, d, n)
print("Decrypted flag:", long_to_bytes(pt).decode("utf-8"))
