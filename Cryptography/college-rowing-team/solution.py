import gmpy2
from Crypto.Util.number import *


def decryption(n, e, c):
    for i in range(1000):
        m, exact = gmpy2.iroot(i * n + c, e)
        if exact:
            print("Decrypted message:", long_to_bytes(m).decode())
            break

n = 13985338100073848499962346750699011512326742990711979583786294844886470425669389469764474043289963969088280475141324734604981276497038537100708836322845411656572006418427866013918729379798636491260028396348617844015862841979175195453570117422353716544166507768864242921758225721278003979256590348823935697123804897560450268775282548700587951487598672539626282196784513553910086002350034101793371250490240347953205377022300063974640289625028728548078378424148385027286992809999596692826238954331923568004396053037776447946561133762767800447991022277806874834150264326754308297071271019402461938938062378926442519736239
e = 3
c = 86893891006724995283854813014390877172735163869036169496565461737741926829273252426484138905500712279566881578262823696620415864916590651557711035982810690227377784525466265776922625254135896966472905776613722370871107640819140591627040592402867504449339363559108090452141753194477174987394954897424151839006206598186417617292433784471465084923195909989
decryption(n, e, c)

# One by one tries all the combinations of n,e and c and finally this given the actual flag
